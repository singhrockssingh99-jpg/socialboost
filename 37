import React, { useState } from 'react';
import { supabase } from '../lib/supabaseClient';
import { useAuth } from '../contexts/AuthContext';
import { X, Loader, Facebook, Instagram } from 'lucide-react';
import toast from 'react-hot-toast';

interface CreateAdModalProps {
  onClose: () => void;
  onAdCreated: () => void;
}

const CreateAdModal: React.FC<CreateAdModalProps> = ({ onClose, onAdCreated }) => {
  const [name, setName] = useState('');
  const [platform, setPlatform] = useState<'facebook' | 'instagram'>('facebook');
  const [budget, setBudget] = useState('');
  const [targetAudience, setTargetAudience] = useState('');
  const [status, setStatus] = useState<'draft' | 'active'>('draft');
  const [loading, setLoading] = useState(false);
  const { user } = useAuth();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!name || !budget || !user) {
      toast.error('Kripya naam aur budget darj karein.');
      return;
    }

    setLoading(true);
    const createToast = toast.loading('Ad campaign banaya ja raha hai...');

    try {
      const { error } = await supabase.from('ads').insert({
        user_id: user.id,
        name,
        platform,
        budget: parseFloat(budget),
        target_audience: targetAudience,
        status,
      });

      if (error) throw error;

      toast.success('Ad campaign safaltapoorvak ban gaya!', { id: createToast });
      onAdCreated();
      onClose();
    } catch (error: any) {
      toast.error(`Ad banane mein samasya hui: ${error.message}`, { id: createToast });
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-xl max-w-2xl w-full max-h-[90vh] flex flex-col">
        <div className="p-6 border-b border-gray-200 flex items-center justify-between">
          <h2 className="text-xl font-bold text-gray-900">Naya Ad Campaign Banayein</h2>
          <button onClick={onClose} className="text-gray-400 hover:text-gray-600">
            <X size={24} />
          </button>
        </div>
        <form onSubmit={handleSubmit} className="flex-1 overflow-y-auto p-6 space-y-4">
          <div>
            <label htmlFor="name" className="block text-sm font-medium text-gray-700 mb-1">Campaign Naam</label>
            <input
              id="name"
              type="text"
              value={name}
              onChange={e => setName(e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="e.g., Summer Sale Campaign"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Platform</label>
            <div className="flex gap-2">
              <button type="button" onClick={() => setPlatform('facebook')} className={`flex-1 flex items-center justify-center gap-2 p-3 rounded-lg border-2 transition-colors ${platform === 'facebook' ? 'border-blue-600 bg-blue-50' : 'border-gray-300'}`}>
                <Facebook size={20} className="text-blue-600" /> Facebook
              </button>
              <button type="button" onClick={() => setPlatform('instagram')} className={`flex-1 flex items-center justify-center gap-2 p-3 rounded-lg border-2 transition-colors ${platform === 'instagram' ? 'border-pink-600 bg-pink-50' : 'border-gray-300'}`}>
                <Instagram size={20} className="text-pink-600" /> Instagram
              </button>
            </div>
          </div>
          <div>
            <label htmlFor="budget" className="block text-sm font-medium text-gray-700 mb-1">Budget ($)</label>
            <input
              id="budget"
              type="number"
              step="0.01"
              value={budget}
              onChange={e => setBudget(e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="e.g., 500.00"
              required
            />
          </div>
          <div>
            <label htmlFor="targetAudience" className="block text-sm font-medium text-gray-700 mb-1">Target Audience</label>
            <textarea
              id="targetAudience"
              rows={3}
              value={targetAudience}
              onChange={e => setTargetAudience(e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="e.g., Age 18-35, interested in tech, living in Mumbai"
            />
          </div>
           <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Status</label>
            <select
              value={status}
              onChange={e => setStatus(e.target.value as 'draft' | 'active')}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              <option value="draft">Draft</option>
              <option value="active">Active</option>
            </select>
          </div>
        </form>
        <div className="p-6 bg-gray-50 border-t border-gray-200 flex justify-end gap-3">
          <button onClick={onClose} className="px-6 py-2.5 bg-white border border-gray-300 rounded-lg hover:bg-gray-100">Cancel</button>
          <button onClick={handleSubmit} disabled={loading} className="px-6 py-2.5 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-blue-400 flex items-center gap-2">
            {loading && <Loader size={18} className="animate-spin" />}
            Create Campaign
          </button>
        </div>
      </div>
    </div>
  );
};

export default CreateAdModal;
